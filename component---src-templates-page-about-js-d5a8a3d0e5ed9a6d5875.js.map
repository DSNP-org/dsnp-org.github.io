{"version":3,"sources":["webpack://gatsby-dsnp-org/./src/templates/page-about.js"],"names":["data","location","pageContext","posts","allGhostPost","edges","page","ghostPage","missionPosts","filter","post","node","tags","some","tag","name","whoWeArePosts","governancePosts","ethosPosts","ecosystemPosts","useEffect","handleScroll","window","addEventListener","removeEventListener","className","title","id","whoWeAreCards","missionCards","ethosCards","governanceCards"],"mappings":"gKA8EA,UAhEkB,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC3BC,EAAQH,EAAKI,aAAaC,MAC1BC,EAAON,EAAKO,UACZC,EAAeL,EAAMM,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,KAAKC,MAAK,SAAAC,GAAG,MAAI,sBAAAA,EAAIC,WACnEC,EAAgBb,EAAMM,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,KAAKC,MAAK,SAAAC,GAAG,MAAI,uBAAAA,EAAIC,WACpEE,EAAkBd,EAAMM,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,KAAKC,MAAK,SAAAC,GAAG,MAAI,yBAAAA,EAAIC,WACtEG,EAAaf,EAAMM,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,KAAKC,MAAK,SAAAC,GAAG,MAAI,yBAAAA,EAAIC,WACjEI,EAAiBhB,EAAMM,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,KAAKC,MAAK,SAAAC,GAAG,MAAI,wBAAAA,EAAIC,WAW3E,OATAK,gBAAU,WACN,IAAMC,EAAe,aAGrB,OADAC,OAAOC,iBAAP,SAAkCF,GAC3B,WACHC,OAAOE,oBAAP,SAAqCH,MAE1C,IAGC,gCACI,gBAAC,IAAD,CAAUpB,SAAUA,IACpB,gBAAC,KAAD,KACI,uBAAKwB,UAAU,aACX,sBAAIA,UAAU,iBAAiBnB,EAAKoB,QAExC,uBAAKD,UAAU,oBACV,eAAAnB,EAAKoB,OAA0B,gCAC5B,uBAAKC,GAAG,UAAUF,UAAU,gCACxB,gBAAC,KAAD,CAAUG,cAAeZ,KAE7B,uBAAKW,GAAG,WAAWF,UAAU,6DACzB,gBAAC,KAAD,CAASI,aAAcrB,MAI9B,uBAAAF,EAAKoB,OAAkC,gCACpC,uBAAKC,GAAG,aAAaF,UAAU,gCAC3B,gBAAC,KAAD,CAAOK,WAAYZ,KAEvB,uBAAKS,GAAG,QAAQF,UAAU,6DACtB,gBAAC,KAAD,CAAYM,gBAAiBd,MAGpC,cAAAX,EAAKoB,OAAyB,gCAC3B,gBAAC,KAAD,CAAWP,eAAgBA,KAE/B,gBAAC,KAAD,CAAYjB,YAAaA","file":"component---src-templates-page-about-js-d5a8a3d0e5ed9a6d5875.js","sourcesContent":["import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport { Ethos, Governance, Layout, Mission, Pagination, WhoWeAre, Ecosystem } from '../components/common'\nimport { MetaData } from '../components/common/meta'\n\n/**\n * About page\n *\n * Loads all posts from Ghost and uses pagination to navigate through them.\n * The number of posts that should appear per page can be setup\n * in /utils/siteConfig.js under `postsPerPage`.\n *\n */\nconst PageAbout = ({ data, location, pageContext }) => {\n    const posts = data.allGhostPost.edges\n    const page = data.ghostPage\n    const missionPosts = posts.filter(post => post.node.tags.some(tag => tag.name === `#AboutPageMission`))\n    const whoWeArePosts = posts.filter(post => post.node.tags.some(tag => tag.name === `#AboutPageWhoWeAre`))\n    const governancePosts = posts.filter(post => post.node.tags.some(tag => tag.name === `#AboutPageGovernance`))\n    const ethosPosts = posts.filter(post => post.node.tags.some(tag => tag.name === `#AboutPagePrinciples`))\n    const ecosystemPosts = posts.filter(post => post.node.tags.some(tag => tag.name === `#AboutPageEcosystem`))\n\n    useEffect(() => {\n        const handleScroll = () => {}\n\n        window.addEventListener(`scroll`, handleScroll)\n        return () => {\n            window.removeEventListener(`scroll`, handleScroll)\n        }\n    }, [])\n\n    return (\n        <>\n            <MetaData location={location} />\n            <Layout>\n                <div className=\"container\">\n                    <h1 className=\"PageAbout__h1\">{page.title}</h1>\n                </div>\n                <div className=\"PageAbout__block\">\n                    {page.title === `Who We Are` && <>\n                        <div id=\"mission\" className=\"PageAbout__fullHeightSection\">\n                            <WhoWeAre whoWeAreCards={whoWeArePosts} />\n                        </div>\n                        <div id=\"whoWeAre\" className=\"PageAbout__whoWeAreTextBlock PageAbout__fullHeightSection\" >\n                            <Mission missionCards={missionPosts} />\n                        </div>\n                    </>\n                    }\n                    {page.title === `Guiding Principles` && <>\n                        <div id=\"governance\" className=\"PageAbout__fullHeightSection\">\n                            <Ethos ethosCards={ethosPosts} />\n                        </div>\n                        <div id=\"ethos\" className=\"PageAbout__whoWeAreTextBlock PageAbout__fullHeightSection\" >\n                            <Governance governanceCards={governancePosts} />\n                        </div>\n                    </>}\n                    {page.title === `Ecosystem` && <>\n                        <Ecosystem ecosystemPosts={ecosystemPosts} />\n                    </>}\n                    <Pagination pageContext={pageContext} />\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nPageAbout.propTypes = {\n    data: PropTypes.shape({\n        allGhostPost: PropTypes.object.isRequired,\n        ghostPage: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    pageContext: PropTypes.object,\n}\n\nexport default PageAbout\n\n// This page query loads all posts sorted descending by published date\n// The `limit` and `skip` values are used for pagination\nexport const pageQuery = graphql`\n  query GhostAboutQuery($limit: Int, $skip: Int, $slug: String!) {\n    ghostPage(slug: { eq: $slug }) {\n            ...GhostPageFields\n    }\n    allGhostPost(\n        sort: { order: DESC, fields: [published_at] },\n        limit: $limit,\n        skip: $skip,\n        filter: {tags: {elemMatch: {name: {eq: \"#AboutPage\"}}}}\n    ) {\n      edges {\n        node {\n          ...GhostPostFields\n          featureImageSharp {\n              childImageSharp {\n                gatsbyImageData(layout: FIXED)\n              }\n            }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}