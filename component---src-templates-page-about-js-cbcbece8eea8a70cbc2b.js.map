{"version":3,"sources":["webpack://gatsby-dsnp-org/./src/images/Emergent.png","webpack://gatsby-dsnp-org/./src/images/Heritage.png","webpack://gatsby-dsnp-org/./src/templates/page-about.js"],"names":["data","location","pageContext","posts","allGhostPost","edges","page","ghostPage","teamProfiles","filter","post","node","tags","some","tag","name","useEffect","handleScroll","window","addEventListener","removeEventListener","type","className","dangerouslySetInnerHTML","__html","html","title","id","src","Emergent","alt","Heritage"],"mappings":"sMAAA,EAAe,IAA0B,uDCAzC,EAAe,IAA0B,uDC6EzC,EA7DkB,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC3BC,EAAQH,EAAKI,aAAaC,MAC1BC,EAAON,EAAKO,UACZC,EAAeL,EAAMM,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,KAAKC,MAAK,SAAAC,GAAG,MAAI,mBAAAA,EAAIC,WAWzE,OATAC,gBAAU,WACN,IAAMC,EAAe,aAGrB,OADAC,OAAOC,iBAAP,SAAkCF,GAC3B,WACHC,OAAOE,oBAAP,SAAqCH,MAE1C,IAGC,gCACI,gBAAC,IAAD,CACIjB,KAAMA,EACNC,SAAUA,EACVoB,KAAK,YAET,gBAAC,KAAD,KACI,uBAAKC,UAAU,iCAAiCC,wBAAyB,CAAEC,OAAQlB,EAAKmB,QAExF,uBAAKH,UAAU,oBACV,SAAAhB,EAAKoB,OAAoB,gCACtB,uBAAKC,GAAG,UAAUL,UAAU,gCACxB,gBAAC,KAAD,CAAMd,aAAcA,MAI3B,sBAAAF,EAAKoB,OAAiC,gCACnC,uBAAKJ,UAAU,yCACX,uBAAKA,UAAU,mCACX,uBAAKA,UAAU,2BAA2BM,IAAKC,EAAUC,IAAI,cAEjE,uBAAKR,UAAU,mCACX,uBAAKA,UAAU,2BAA2BM,IAAKG,EAAUD,IAAI,gBAMzE,gBAAC,KAAD,CAAY5B,YAAaA","file":"component---src-templates-page-about-js-cbcbece8eea8a70cbc2b.js","sourcesContent":["export default __webpack_public_path__ + \"static/Emergent-1cb45a683a1ff56c38616506e053c442.png\";","export default __webpack_public_path__ + \"static/Heritage-93d4fdb172914fae82d340c1445cc379.png\";","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport { Layout, Pagination, Team } from '../components/common'\nimport { MetaData } from '../components/common/meta'\nimport Emergent from \"../images/Emergent.png\"\nimport Heritage from \"../images/Heritage.png\"\n\n/**\n * About page\n *\n * Loads all posts from Ghost and uses pagination to navigate through them.\n * The number of posts that should appear per page can be setup\n * in /utils/siteConfig.js under `postsPerPage`.\n *\n */\nconst PageAbout = ({ data, location, pageContext }) => {\n    const posts = data.allGhostPost.edges\n    const page = data.ghostPage\n    const teamProfiles = posts.filter(post => post.node.tags.some(tag => tag.name === `#AboutPageTeam`))\n\n    useEffect(() => {\n        const handleScroll = () => {}\n\n        window.addEventListener(`scroll`, handleScroll)\n        return () => {\n            window.removeEventListener(`scroll`, handleScroll)\n        }\n    }, [])\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"website\"\n            />\n            <Layout>\n                <div className=\"container PageAbout__container\" dangerouslySetInnerHTML={{ __html: page.html }}>\n                </div>\n                <div className=\"PageAbout__block\">\n                    {page.title === `Team` && <>\n                        <div id=\"mission\" className=\"PageAbout__fullHeightSection\">\n                            <Team teamProfiles={teamProfiles} />\n                        </div>\n                    </>\n                    }\n                    {page.title === `Mission & Purpose` && <>\n                        <div className=\"container PageAbout__principlesImages\">\n                            <div className=\"PageAbout__principlesImgWrapper\">\n                                <img className=\"PageAbout__principlesImg\" src={Emergent} alt=\"Emergent\"/>\n                            </div>\n                            <div className=\"PageAbout__principlesImgWrapper\">\n                                <img className=\"PageAbout__principlesImg\" src={Heritage} alt=\"Heritage\"/>\n\n                            </div>\n                        </div>\n                    </>\n                    }\n                    <Pagination pageContext={pageContext} />\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nPageAbout.propTypes = {\n    data: PropTypes.shape({\n        allGhostPost: PropTypes.object.isRequired,\n        ghostPage: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    pageContext: PropTypes.object,\n}\n\nexport default PageAbout\n\n// This page query loads all posts sorted descending by published date\n// The `limit` and `skip` values are used for pagination\nexport const pageQuery = graphql`\n  query GhostAboutQuery($limit: Int, $skip: Int, $slug: String!) {\n    ghostPage(slug: { eq: $slug }) {\n            ...GhostPageFields\n    }\n    allGhostPost(\n        sort: { order: DESC, fields: [published_at] },\n        limit: $limit,\n        skip: $skip,\n        filter: {tags: {elemMatch: {name: {eq: \"#AboutPage\"}}}}\n    ) {\n      edges {\n        node {\n          ...GhostPostFields\n          featureImageSharp {\n              childImageSharp {\n                gatsbyImageData(layout: FIXED)\n              }\n            }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}