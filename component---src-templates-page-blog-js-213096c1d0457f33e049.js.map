{"version":3,"sources":["webpack:///./src/templates/page-blog.js"],"names":["PageBlog","data","location","pageContext","posts","allGhostPost","edges","className","data-aos","data-aos-duration","map","node","key","id","post"],"mappings":"4FAAA,wDA+CeA,UAhCE,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC1BC,EAAQH,EAAKI,aAAaC,MAEhC,OACI,oCACI,kBAAC,IAAD,CAAUJ,SAAUA,IACpB,kBAAC,IAAD,KACI,yBAAKK,UAAU,aACX,wBAAIA,UAAU,gBAAgBC,WAAS,aAAaC,oBAAkB,QAAtE,QACA,6BAASF,UAAU,aACdH,EAAMM,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAEP,kBAAC,IAAD,CAAUC,IAAKD,EAAKE,GAAIC,KAAMH,QAGtC,kBAAC,IAAD,CAAYR,YAAaA","file":"component---src-templates-page-blog-js-213096c1d0457f33e049.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport { Layout, PostCard, Pagination } from '../components/common'\nimport { MetaData } from '../components/common/meta'\n\n/**\n * Blog page\n *\n * Loads all posts from Ghost and uses pagination to navigate through them.\n * The number of posts that should appear per page can be setup\n * in /utils/siteConfig.js under `postsPerPage`.\n *\n */\nconst PageBlog = ({ data, location, pageContext }) => {\n    const posts = data.allGhostPost.edges\n\n    return (\n        <>\n            <MetaData location={location} />\n            <Layout>\n                <div className=\"container\">\n                    <h1 className=\"content-title\" data-aos=\"fade-right\" data-aos-duration=\"1400\">Blog</h1>\n                    <section className=\"post-feed\">\n                        {posts.map(({ node }) => (\n                            // The tag below includes the markup for each post - components/common/PostCard.js\n                            <PostCard key={node.id} post={node} />\n                        ))}\n                    </section>\n                    <Pagination pageContext={pageContext} />\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nPageBlog.propTypes = {\n    data: PropTypes.shape({\n        allGhostPost: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    pageContext: PropTypes.object,\n}\n\nexport default PageBlog\n\n// This page query loads all posts sorted descending by published date\n// The `limit` and `skip` values are used for pagination\nexport const pageQuery = graphql`\n  query GhostPostQuery($limit: Int, $skip: Int) {\n    allGhostPost(\n        sort: { order: DESC, fields: [published_at] },\n        limit: $limit,\n        skip: $skip,\n        filter: {tags: {elemMatch: {name: {eq: \"#BlogPost\"}}}}\n    ) {\n      edges {\n        node {\n          ...GhostPostFields\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}